name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  health-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        
    defaults:
      run: 
        working-directory: library_back

    steps:
      
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
      
    - name: Setup venv
      run: python3 -m venv env && . env/bin/activate
      
    - run: . env/bin/activate 
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
   
    - name: Run migrations
      run: |
        python manage.py makemigrations --noinput 
        python manage.py migrate --noinput
      env:
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports['5432'] }}
      
    - name: Run Tests
      run: |
        python manage.py test
      env:
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports['5432'] }}
  deploy:
    runs-on: ubuntu-latest
    needs: [health-and-test]
    if: ${{ github.event_name == 'push' }}
    defaults:
      run: 
        working-directory: library_back
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_BACK_NAME }}
          heroku_email: ${{ secrets.USER_EMAIL }}